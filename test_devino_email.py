#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–∞—Ä—Å–µ—Ä–∞ –Ω–∞ —Ä–µ–∞–ª—å–Ω–æ–º –ø–∏—Å—å–º–µ –æ—Ç Devino Telecom
"""

import logging
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –Ω–∞—à–∏–º –º–æ–¥—É–ª—è–º
sys.path.append(os.path.dirname(__file__))

try:
    from parser import EmailParser
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    sys.exit(1)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.DEBUG)

def test_devino_email():
    """–¢–µ—Å—Ç –Ω–∞ —Ä–µ–∞–ª—å–Ω–æ–º –ø–∏—Å—å–º–µ –æ—Ç Devino"""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä—Å–µ—Ä–∞ –Ω–∞ –ø–∏—Å—å–º–µ Devino Telecom")
    print("=" * 60)
    
    # –†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–∏—Å—å–º–∞
    devino_email = {
        'subject': '–í–Ω–µ–ø–ª–∞–Ω–æ–≤—ã–µ —Ä–∞–±–æ—Ç—ã –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ Devino Telecom',
        'body': '''–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ –û—Ç–∫—Ä—ã—Ç—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ +7 (495) 646-0054 +7 (800) 555-0054 –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –ª–∏–Ω–∏—è –ø–æ –†–æ—Å—Å–∏–∏–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ä–∞–±–æ—Ç–∞—Ö –í–Ω–µ–ø–ª–∞–Ω–æ–≤—ã–µ —Ä–∞–±–æ—Ç—ã –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ Devino Telecom 
 
–£–≤–∞–∂–∞–µ–º—ã–µ –∫–ª–∏–µ–Ω—Ç—ã!
–£–≤–µ–¥–æ–º–ª—è–µ–º –í–∞—Å –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –≤–Ω–µ–ø–ª–∞–Ω–æ–≤—ã—Ö —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ä–∞–±–æ—Ç –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ Devino Telecom.
–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç:** 26.06.2025 19:00** (–ú–°–ö/GMT+3)
–û–∫–æ–Ω—á–∞–Ω–∏–µ —Ä–∞–±–æ—Ç:** 26.06.2025 20:00** (–ú–°–ö/GMT+3)
–í —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ –≤–æ–∑–º–æ–∂–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–π –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–µ—Ä–≤–∏—Å–∞–º –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã DEVINO.
**–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ Devino Telecom.**
*Copyright ¬© 2025, All rights reserved.* –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏''',
        'from': 'no-reply@devinotele.com',
        'date': '2025-06-26 17:00:00'
    }
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞—Ä—Å–µ—Ä
    parser = EmailParser()
    
    print("üìß –ò—Å—Ö–æ–¥–Ω–æ–µ –ø–∏—Å—å–º–æ:")
    print(f"–¢–µ–º–∞: {devino_email['subject']}")
    print(f"–û—Ç: {devino_email['from']}")
    print("-" * 40)
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞ –ø–∏—Å—å–º–∞
    print("\nüîç –¢–µ—Å—Ç 1: –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –ø–∏—Å—å–º–∞...")
    is_maintenance = parser.is_maintenance_email(devino_email)
    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {'‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ä–∞–±–æ—Ç–∞—Ö' if is_maintenance else '‚ùå –û–±—ã—á–Ω–æ–µ –ø–∏—Å—å–º–æ'}")
    
    if not is_maintenance:
        print("‚ùå –ü–∞—Ä—Å–µ—Ä –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–ª –ø–∏—Å—å–º–æ –∫–∞–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ä–∞–±–æ—Ç–∞—Ö")
        return False
    
    # –¢–µ—Å—Ç 2: –ü–∞—Ä—Å–∏–Ω–≥ –¥–∞–Ω–Ω—ã—Ö
    print("\nüìä –¢–µ—Å—Ç 2: –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö...")
    parsed_data = parser.parse_email(devino_email)
    
    if not parsed_data:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø–∏—Å—å–º–∞")
        return False
    
    print("‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∏–∑–≤–ª–µ—á–µ–Ω—ã:")
    print(f"  üìù –û–ø–µ—Ä–∞—Ç–æ—Ä: {parsed_data.get('operator', '–ù–ï –ù–ê–ô–î–ï–ù')}")
    print(f"  üìù –ù–∞—á–∞–ª–æ: {parsed_data.get('start_time', '–ù–ï –ù–ê–ô–î–ï–ù–û')}")
    print(f"  üìù –û–∫–æ–Ω—á–∞–Ω–∏–µ: {parsed_data.get('end_time', '–ù–ï –ù–ê–ô–î–ï–ù–û')}")
    print(f"  üìù –¢–∏–ø —Ä–∞–±–æ—Ç: {parsed_data.get('work_type', '–ù–ï –ù–ê–ô–î–ï–ù')}")
    
    # –¢–µ—Å—Ç 3: –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è Telegram
    print("\nüì± –¢–µ—Å—Ç 3: –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è Telegram...")
    telegram_message = parser.format_for_telegram(parsed_data)
    
    print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Telegram:")
    print("-" * 40)
    print(telegram_message)
    print("-" * 40)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–∂–∏–¥–∞–µ–º—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    expected_results = {
        'operator': 'Devino Telecom',
        'start_time': '26.06.2025 19:00',
        'end_time': '26.06.2025 20:00',
        'work_type': '–≤–Ω–µ–ø–ª–∞–Ω–æ–≤—ã–µ —Ä–∞–±–æ—Ç—ã'
    }
    
    print("\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∂–∏–¥–∞–µ–º—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:")
    all_correct = True
    
    for key, expected in expected_results.items():
        actual = parsed_data.get(key, '')
        if expected.lower() in actual.lower() if actual else False:
            print(f"  ‚úÖ {key}: {actual}")
        else:
            print(f"  ‚ùå {key}: –æ–∂–∏–¥–∞–ª–æ—Å—å '{expected}', –ø–æ–ª—É—á–µ–Ω–æ '{actual}'")
            all_correct = False
    
    return all_correct

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∞"""
    
    success = test_devino_email()
    
    print("\n" + "=" * 60)
    if success:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("‚úÖ –ü–∞—Ä—Å–µ—Ä –≥–æ—Ç–æ–≤ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–∏—Å—å–º–∞–º–∏ Devino Telecom")
    else:
        print("üí° –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–∞—Ä—Å–∏–Ω–≥–æ–º, –Ω—É–∂–Ω–æ –¥–æ—Ä–∞–±–æ—Ç–∞—Ç—å —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è")

if __name__ == "__main__":
    main()