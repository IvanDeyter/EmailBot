#!/usr/bin/env python3
"""
–ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç –≤—Å–µ–π —Å–∏—Å—Ç–µ–º—ã Email-Telegram –±–æ—Ç–∞
"""

import logging
import sys
import os
from dotenv import load_dotenv

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –Ω–∞—à–∏–º –º–æ–¥—É–ª—è–º
sys.path.append(os.path.dirname(__file__))

try:
    from email_client import EmailClient
    from parser import EmailParser
    from telegram_bot import TelegramBotSync
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    sys.exit(1)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

def test_full_pipeline():
    """–¢–µ—Å—Ç –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–∏—Å—å–º–∞"""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏")
    print("=" * 60)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    load_dotenv()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    required_vars = [
        'EMAIL_LOGIN', 'EMAIL_PASSWORD', 'EMAIL_SENDER',
        'TELEGRAM_BOT_TOKEN', 'TELEGRAM_CHAT_ID'
    ]
    
    missing_vars = [var for var in required_vars if not os.getenv(var)]
    if missing_vars:
        print(f"‚ùå –ù–µ –∑–∞–¥–∞–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: {missing_vars}")
        return False
    
    try:
        # –®–∞–≥ 1: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
        print("üîß –®–∞–≥ 1: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...")
        
        email_client = EmailClient(
            server=os.getenv('EMAIL_SERVER', 'imap.yandex.ru'),
            port=int(os.getenv('EMAIL_PORT', 993)),
            login=os.getenv('EMAIL_LOGIN'),
            password=os.getenv('EMAIL_PASSWORD')
        )
        
        parser = EmailParser()
        
        telegram_bot = TelegramBotSync(
            bot_token=os.getenv('TELEGRAM_BOT_TOKEN'),
            chat_id=os.getenv('TELEGRAM_CHAT_ID'),
            proxy_url=os.getenv('TELEGRAM_PROXY_URL')
        )
        
        print("‚úÖ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")
        
        # –®–∞–≥ 2: –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π
        print("\nüîó –®–∞–≥ 2: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π...")
        
        # Email –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        if not email_client.connect():
            print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ø–æ—á—Ç–µ")
            return False
        
        if not email_client.select_mailbox():
            print("‚ùå –û—à–∏–±–∫–∞ –≤—ã–±–æ—Ä–∞ –ø–æ—á—Ç–æ–≤–æ–≥–æ —è—â–∏–∫–∞")
            return False
        
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ø–æ—á—Ç–µ —É—Å–ø–µ—à–Ω–æ")
        
        # Telegram –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        if not telegram_bot.test_connection():
            print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram")
            return False
        
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram —É—Å–ø–µ—à–Ω–æ")
        
        # –®–∞–≥ 3: –¢–µ—Å—Ç –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö –ø–∏—Å—å–º–∞—Ö
        print(f"\nüìß –®–∞–≥ 3: –ü–æ–∏—Å–∫ –ø–∏—Å–µ–º –æ—Ç {os.getenv('EMAIL_SENDER')}...")
        
        # –ò—â–µ–º –Ω–æ–≤—ã–µ –ø–∏—Å—å–º–∞ (–±–µ–∑ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è)
        new_emails = email_client.get_new_emails_from_sender(
            os.getenv('EMAIL_SENDER'), 
            update_state=False
        )
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(new_emails)} –Ω–æ–≤—ã—Ö –ø–∏—Å–µ–º")
        
        if not new_emails:
            print("‚ÑπÔ∏è –ù–æ–≤—ã—Ö –ø–∏—Å–µ–º –Ω–µ—Ç, —Ç–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞ –ø—Ä–∏–º–µ—Ä–µ...")
            
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–∏–º–µ—Ä
            test_email = {
                'subject': '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ä–∞–±–æ—Ç–∞—Ö –í–Ω–µ–ø–ª–∞–Ω–æ–≤—ã–µ —Ä–∞–±–æ—Ç—ã –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ –ú–æ—Ç–∏–≤',
                'body': '''–£–≤–∞–∂–∞–µ–º—ã–µ –∫–ª–∏–µ–Ω—Ç—ã!
–û–ø–µ—Ä–∞—Ç–æ—Ä –ú–æ—Ç–∏–≤ —Å–æ–æ–±—â–∏–ª –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ä–∞–±–æ—Ç.
–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç:** 19.06.2025 21:00 **(–ú–°–ö/GMT+3)
–û–∫–æ–Ω—á–∞–Ω–∏–µ —Ä–∞–±–æ—Ç:** 20.06.2025 02:00** (–ú–°–ö/GMT+3)
–í —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ –≤—Ä–µ–º–µ–Ω–∏ –º–æ–≥—É—Ç –Ω–∞–±–ª—é–¥–∞—Ç—å—Å—è –∑–∞—Ç—Ä—É–¥–Ω–µ–Ω–∏—è –≤ –¥–æ—Å—Ç–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π –∞–±–æ–Ω–µ–Ω—Ç–∞–º –¥–∞–Ω–Ω–æ–≥–æ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞.''',
                'from': os.getenv('EMAIL_SENDER'),
                'date': '2025-06-19 18:30:00'
            }
            
            emails_to_process = [test_email]
        else:
            # –ë–µ—Ä–µ–º –ø–µ—Ä–≤–æ–µ –ø–∏—Å—å–º–æ –¥–ª—è —Ç–µ—Å—Ç–∞
            emails_to_process = [new_emails[0]]
        
        # –®–∞–≥ 4: –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–∏—Å—å–º–∞
        print(f"\nüîç –®–∞–≥ 4: –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–∏—Å—å–º–∞...")
        
        test_email = emails_to_process[0]
        print(f"–¢–µ–º–∞: {test_email['subject'][:60]}...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –ø–∏—Å—å–º–∞
        is_maintenance = parser.is_maintenance_email(test_email)
        print(f"–¢–∏–ø –ø–∏—Å—å–º–∞: {'üöß –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ä–∞–±–æ—Ç–∞—Ö' if is_maintenance else 'üìÑ –û–±—ã—á–Ω–æ–µ –ø–∏—Å—å–º–æ'}")
        
        if not is_maintenance:
            print("‚ÑπÔ∏è –ü–∏—Å—å–º–æ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ–º –æ —Ä–∞–±–æ—Ç–∞—Ö")
            print("‚úÖ –ü—Ä–æ—Ü–µ—Å—Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        else:
            # –ü–∞—Ä—Å–∏–º –¥–∞–Ω–Ω—ã–µ
            parsed_data = parser.parse_email(test_email)
            
            if not parsed_data:
                print("‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –ø–∏—Å—å–º–∞")
                return False
            
            print("‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∏–∑–≤–ª–µ—á–µ–Ω—ã:")
            print(f"  ‚Ä¢ –û–ø–µ—Ä–∞—Ç–æ—Ä: {parsed_data.get('operator', '–ù–µ –Ω–∞–π–¥–µ–Ω')}")
            print(f"  ‚Ä¢ –ù–∞—á–∞–ª–æ: {parsed_data.get('start_time', '–ù–µ –Ω–∞–π–¥–µ–Ω–æ')}")
            print(f"  ‚Ä¢ –û–∫–æ–Ω—á–∞–Ω–∏–µ: {parsed_data.get('end_time', '–ù–µ –Ω–∞–π–¥–µ–Ω–æ')}")
            print(f"  ‚Ä¢ –¢–∏–ø —Ä–∞–±–æ—Ç: {parsed_data.get('work_type', '–ù–µ –Ω–∞–π–¥–µ–Ω')}")
            
            # –®–∞–≥ 5: –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            print(f"\nüì§ –®–∞–≥ 5: –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram...")
            
            response = input("‚ùì –û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram? (y/n): ")
            if response.lower() == 'y':
                if telegram_bot.send_maintenance_notification(parsed_data):
                    print("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
                else:
                    print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
                    return False
            else:
                print("‚ÑπÔ∏è –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–æ–ø—É—â–µ–Ω–∞")
        
        # –®–∞–≥ 6: –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ
        print(f"\nüèÅ –®–∞–≥ 6: –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...")
        email_client.disconnect()
        print("‚úÖ –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç –ø–æ—á—Ç—ã")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {str(e)}")
        return False

def show_bot_status():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞"""
    
    print("\nüìä –°—Ç–∞—Ç—É—Å –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞:")
    print("-" * 40)
    
    load_dotenv()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    config_items = [
        ('EMAIL_LOGIN', 'Email –ª–æ–≥–∏–Ω'),
        ('EMAIL_PASSWORD', 'Email –ø–∞—Ä–æ–ª—å'),
        ('EMAIL_SENDER', 'Email –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å'),
        ('TELEGRAM_BOT_TOKEN', 'Telegram —Ç–æ–∫–µ–Ω'),
        ('TELEGRAM_CHAT_ID', 'Telegram Chat ID'),
    ]
    
    all_configured = True
    
    for env_var, description in config_items:
        value = os.getenv(env_var)
        status = "‚úÖ" if value else "‚ùå"
        print(f"{status} {description}")
        if not value:
            all_configured = False
    
    optional_items = [
        ('EMAIL_SERVER', 'Email —Å–µ—Ä–≤–µ—Ä', 'imap.yandex.ru'),
        ('EMAIL_PORT', 'Email –ø–æ—Ä—Ç', '993'),
        ('CHECK_INTERVAL', '–ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏', '1800'),
        ('TELEGRAM_PROXY_URL', 'Telegram –ø—Ä–æ–∫—Å–∏', '–Ω–µ –∑–∞–¥–∞–Ω'),
    ]
    
    print("\n–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")
    for env_var, description, default in optional_items:
        value = os.getenv(env_var, default)
        print(f"‚ÑπÔ∏è {description}: {value}")
    
    print("\n" + "=" * 40)
    
    if all_configured:
        print("üéâ –ë–æ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É!")
        print("‚û°Ô∏è –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python main.py")
    else:
        print("‚ö†Ô∏è –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É")
        print("üìù –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ .env —Ñ–∞–π–ª–µ")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∞"""
    
    print("ü§ñ –ü–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Email-Telegram –±–æ—Ç–∞")
    print("=" * 60)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    show_bot_status()
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    if input("\n‚ùì –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ? (y/n): ").lower() == 'y':
        if test_full_pipeline():
            print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
            print("üöÄ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ")
            print("\nüìù –î–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:")
            print("   python main.py")
        else:
            print("\nüí° –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å")
    else:
        print("‚ÑπÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–ø—É—â–µ–Ω–æ")

if __name__ == "__main__":
    main()